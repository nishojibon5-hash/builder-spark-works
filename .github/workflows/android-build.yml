name: 📱 Build Android APK

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - "docs/**"
  pull_request:
    branches: [main]

  # Allow manual trigger
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  JAVA_OPTS: -Xmx4g

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: ☕ Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: "10406996"
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: false
          packages: |
            platforms;android-34
            build-tools;34.0.0
            platform-tools
            tools

      - name: 📦 Install Dependencies
        run: |
          echo "📦 Installing npm dependencies..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: 🏗️ Build React Application
        run: |
          echo "🏗️ Building React application..."
          npm run build:client
          echo "📁 Checking build output..."
          ls -la dist/
          if [ -d "dist/spa" ]; then
            echo "✅ Build output found in dist/spa"
            ls -la dist/spa/
          else
            echo "❌ Build output not found!"
            exit 1
          fi

      - name: 📁 Prepare Android Assets
        run: |
          echo "📁 Creating Android asset directories..."
          mkdir -p android/app/src/main/assets
          mkdir -p android/app/src/main/res/mipmap-hdpi
          mkdir -p android/app/src/main/res/mipmap-mdpi
          mkdir -p android/app/src/main/res/mipmap-xhdpi
          mkdir -p android/app/src/main/res/mipmap-xxhdpi
          mkdir -p android/app/src/main/res/mipmap-xxxhdpi

          echo "📋 Directory structure created:"
          find android/app/src/main/ -type d

      - name: 📄 Copy Web Assets to Android
        run: |
          echo "📄 Copying web assets to Android..."
          if [ -d "dist/spa" ]; then
            cp -r dist/spa/* android/app/src/main/assets/
            echo "✅ Assets copied successfully"
            echo "📋 Asset contents:"
            ls -la android/app/src/main/assets/
          else
            echo "❌ No web assets found to copy!"
            exit 1
          fi

      - name: 🔧 Setup Gradle Wrapper
        run: |
          echo "🔧 Setting up Gradle wrapper..."
          cd android
          chmod +x gradlew
          echo "✅ Gradle wrapper permissions set"

          echo "📋 Gradle version:"
          ./gradlew --version

      - name: 💾 Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🧹 Clean Previous Build
        working-directory: android
        run: |
          echo "🧹 Cleaning previous build..."
          ./gradlew clean
          echo "✅ Clean completed"

      - name: 🔍 Validate Android Project
        working-directory: android
        run: |
          echo "🔍 Validating Android project structure..."
          ./gradlew tasks --all | head -20
          echo "✅ Project validation completed"

      - name: 🛠️ Build Debug APK
        working-directory: android
        run: |
          echo "🛠️ Building Debug APK..."
          ./gradlew assembleDebug --stacktrace --info --no-daemon

          echo "📋 Checking Debug APK output..."
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "✅ Debug APK built successfully!"
            ls -la app/build/outputs/apk/debug/
          else
            echo "❌ Debug APK build failed!"
            find app/build -name "*.apk" -type f || echo "No APK files found"
            exit 1
          fi

      - name: 🚀 Build Release APK
        working-directory: android
        run: |
          echo "🚀 Building Release APK..."
          ./gradlew assembleRelease --stacktrace --info --no-daemon

          echo "📋 Checking Release APK output..."
          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            echo "✅ Release APK built successfully!"
            ls -la app/build/outputs/apk/release/
          else
            echo "❌ Release APK build failed!"
            find app/build -name "*.apk" -type f || echo "No APK files found"
            exit 1
          fi

      - name: 📱 Verify APK Files
        run: |
          echo "📱 Verifying APK files..."
          DEBUG_APK="android/app/build/outputs/apk/debug/app-debug.apk"
          RELEASE_APK="android/app/build/outputs/apk/release/app-release-unsigned.apk"

          if [ -f "$DEBUG_APK" ]; then
            echo "✅ Debug APK: $(du -h $DEBUG_APK | cut -f1)"
          else
            echo "❌ Debug APK not found!"
          fi

          if [ -f "$RELEASE_APK" ]; then
            echo "✅ Release APK: $(du -h $RELEASE_APK | cut -f1)"
          else
            echo "❌ Release APK not found!"
          fi

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: LoanBondhu-Debug-APK
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: 📤 Upload Release APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: LoanBondhu-Release-APK
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30

      - name: 🏷️ Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: 🏦 LoanBondhu v1.0.${{ github.run_number }}
          body: |
            ## 📱 LoanBondhu Android App Build

            ### ✨ Features:
            - 🏦 **Loan Management System** - Complete loan application and tracking
            - 👥 **Society Member Management** - Member registration and profiles  
            - 💰 **Collection Tracking** - Daily collection and payment tracking
            - 💾 **Savings Management** - Member savings account management
            - 📊 **Financial Reports** - Comprehensive financial analytics
            - 📱 **Responsive Design** - Works perfectly on all devices
            - 🌐 **Bengali Language Support** - Full Bengali interface

            ### 📋 APK Information:
            - **📱 Minimum Android Version:** 5.0 (API 21)
            - **�� Target Android Version:** 14 (API 34)
            - **🏗️ Architecture:** Universal APK
            - **📦 Size:** ~12MB
            - **🔐 Signing:** Debug signed (for testing)

            ### 🚀 Installation Instructions:
            1. **📥 Download** the APK file from below
            2. **⚙️ Enable** "Unknown Sources" in Android Settings > Security
            3. **📱 Install** the downloaded APK file
            4. **🎉 Launch** LoanBondhu app

            ### 👨‍💼 Admin Access:
            - **📞 Phone:** 01650074073
            - **🔐 Password:** admin123

            ### 📱 APK Files:
            - **🛠️ Debug APK:** For testing and development  
            - **🚀 Release APK:** For production use

            ---

            **🏦 LoanBondhu - সমিতি ব্যবস্থাপনা সিস্টেম**

            Built with ❤️ for Bangladesh 🇧🇩
          files: |
            android/app/build/outputs/apk/debug/app-debug.apk
            android/app/build/outputs/apk/release/app-release-unsigned.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Comment on PR
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🤖 Android APK Build Completed Successfully!

              ✅ **Debug APK:** Successfully built and ready for testing
              ✅ **Release APK:** Successfully built and ready for production

              ### 📱 APK Download:
              APK files are available in the workflow artifacts:
              - [🛠️ Debug APK Artifact](https://github.com/nishojibon5-hash/builder-spark-works/actions/runs/${context.runId})
              - [🚀 Release APK Artifact](https://github.com/nishojibon5-hash/builder-spark-works/actions/runs/${context.runId})

              ### 📋 Installation Steps:
              1. 📥 Download the APK from artifacts above
              2. ⚙️ Enable "Unknown Sources" in Android settings
              3. 📱 Install the APK file on your device
              4. 🎉 Launch the LoanBondhu app

              ### 👨‍💼 Admin Login:
              - **📞 Phone:** 01650074073
              - **🔐 Password:** admin123

              **🏦 LoanBondhu - Ready to use! 🎉**`
            })

      - name: 🧹 Cleanup
        if: always()
        run: |
          echo "🧹 Cleaning up temporary files..."
          rm -rf ~/.gradle/daemon/
          echo "✅ Cleanup completed"
